{"ast":null,"code":"import _objectSpread from\"C:/Users/jacka/OneDrive/Documents/GitHub/test/round2MERN/pstudios/pstudios-landingpage/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'../styles/Admin.css';import API_BASE_URL from'../config/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[formData,setFormData]=useState({email:'',password:''});const[error,setError]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const handleChange=e=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');try{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/auth/login\"),{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify(formData)});const data=await response.json();if(response.ok){navigate('/admin');}else{setError(data.error||'Login failed');}}catch(err){setError('Network error. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Paradigm Studios Admin\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true,disabled:loading,autoComplete:\"email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true,disabled:loading,autoComplete:\"current-password\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"login-button\",children:loading?'Logging in...':'Login'})]})]})});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","Login","formData","setFormData","email","password","error","setError","loading","setLoading","navigate","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","response","fetch","concat","method","headers","credentials","body","JSON","stringify","data","json","ok","err","className","children","onSubmit","htmlFor","type","id","onChange","required","disabled","autoComplete"],"sources":["C:/Users/jacka/OneDrive/Documents/GitHub/test/round2MERN/pstudios/pstudios-landingpage/src/admin/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Admin.css';\r\nimport API_BASE_URL from '../config/api';\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        navigate('/admin');\r\n      } else {\r\n        setError(data.error || 'Login failed');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h1>Paradigm Studios Admin</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={loading}\r\n              autoComplete=\"email\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={loading}\r\n              autoComplete=\"current-password\"\r\n            />\r\n          </div>\r\n\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n\r\n          <button type=\"submit\" disabled={loading} className=\"login-button\">\r\n            {loading ? 'Logging in...' : 'Login'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}