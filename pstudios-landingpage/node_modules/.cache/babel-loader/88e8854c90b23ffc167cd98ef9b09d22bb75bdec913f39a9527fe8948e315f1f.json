{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import Login from'./Login';import Dashboard from'./Dashboard';import API_BASE_URL from'../config/api';import{jsx as _jsx}from\"react/jsx-runtime\";function AdminEntry(){const[isAuthenticated,setIsAuthenticated]=useState(null);const[loading,setLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{checkAuthentication();},[]);const checkAuthentication=async()=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/auth/me\"),{credentials:'include'});if(response.ok){setIsAuthenticated(true);}else{setIsAuthenticated(false);}}catch(error){console.error('Error checking authentication:',error);setIsAuthenticated(false);}finally{setLoading(false);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"admin-loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading...\"})});}return isAuthenticated?/*#__PURE__*/_jsx(Dashboard,{}):/*#__PURE__*/_jsx(Login,{});}export default AdminEntry;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Login","Dashboard","API_BASE_URL","jsx","_jsx","AdminEntry","isAuthenticated","setIsAuthenticated","loading","setLoading","navigate","checkAuthentication","response","fetch","concat","credentials","ok","error","console","className","children"],"sources":["C:/Users/jacka/OneDrive/Documents/GitHub/test/round2MERN/pstudios/pstudios-landingpage/src/admin/AdminEntry.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Dashboard from './Dashboard';\r\nimport API_BASE_URL from '../config/api';\r\n\r\nfunction AdminEntry() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n  }, []);\r\n\r\n  const checkAuthentication = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/me`, {\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setIsAuthenticated(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking authentication:', error);\r\n      setIsAuthenticated(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"admin-loading\">\r\n        <div className=\"loading-spinner\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return isAuthenticated ? <Dashboard /> : <Login />;\r\n}\r\n\r\nexport default AdminEntry;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,YAAY,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACda,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIZ,YAAY,iBAAgB,CAC1Da,WAAW,CAAE,SACf,CAAC,CAAC,CAEF,GAAIH,QAAQ,CAACI,EAAE,CAAE,CACfT,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,IAAM,CACLA,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtDV,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,GAAID,OAAO,CAAE,CACX,mBACEJ,IAAA,QAAKe,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BhB,IAAA,QAAKe,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,YAAU,CAAK,CAAC,CAC9C,CAAC,CAEV,CAEA,MAAO,CAAAd,eAAe,cAAGF,IAAA,CAACH,SAAS,GAAE,CAAC,cAAGG,IAAA,CAACJ,KAAK,GAAE,CAAC,CACpD,CAEA,cAAe,CAAAK,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}